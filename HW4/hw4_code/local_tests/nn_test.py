import numpy as np

class NN_Test():
    def __init__(self):

		# Sample data: 
        self.x_train = np.array([[ 0.03807591,  0.05068012, -0.01375064, -0.01599922, -0.03596778,
							        -0.02198168, -0.01394774, -0.00259226, -0.02595242, -0.0010777 ],
							       [ 0.01991321,  0.05068012,  0.10480869,  0.07007254, -0.03596778,
							        -0.0266789 , -0.02499266, -0.00259226,  0.00371174,  0.04034337],
							       [ 0.05260606, -0.04464164, -0.00405033, -0.03091833, -0.0469754 ,
							        -0.0583069 , -0.01394774, -0.02583997,  0.03605579,  0.02377494],
							       [ 0.04897352,  0.05068012,  0.08109682,  0.02187235,  0.04383748,
							         0.06413415, -0.05444576,  0.07120998,  0.03243323,  0.04862759],
							       [ 0.0562386 ,  0.05068012,  0.02181716,  0.05630106, -0.00707277,
							         0.01810133, -0.03235593, -0.00259226, -0.02364456,  0.02377494],
							       [ 0.03444337, -0.04464164,  0.01858372,  0.05630106,  0.01219057,
							        -0.05454912, -0.06917231,  0.07120998,  0.13008061,  0.00720652],
							       [ 0.04170844,  0.05068012,  0.07139652,  0.00810087,  0.03833367,
							         0.01590929, -0.01762938,  0.03430886,  0.07341008,  0.08590655],
							       [ 0.01264814,  0.05068012, -0.07195249, -0.04698506, -0.05110326,
							        -0.09713731,  0.11859122, -0.0763945 , -0.02028875, -0.03835666],
							       [-0.00551455, -0.04464164,  0.00888341, -0.05042793,  0.0259501 ,
							         0.04722413, -0.04340085,  0.07120998,  0.01482271,  0.00306441]]).T


        self.y_train = np.array([[1., 2., 3., 4., 5., 6., 7., 8., 9.]])

        self.yh = np.array([[2.16402836, 3.75766397, 4.68946889, 5.81078464, 5.91976053,
        					7.09269363, 8.59720718, 8.5714377 , 9.98050705]])

		# Sample outputs for misc helper functions:
        self.leaky_relu = np.array([[ 3.8075910e-02,  1.9913210e-02,  5.2606060e-02,  4.8973520e-02,
							         5.6238600e-02,  3.4443370e-02,  4.1708440e-02,  1.2648140e-02,
							        -2.7572750e-04],
							       [ 5.0680120e-02,  5.0680120e-02, -2.2320820e-03,  5.0680120e-02,
							         5.0680120e-02, -2.2320820e-03,  5.0680120e-02,  5.0680120e-02,
							        -2.2320820e-03],
							       [-6.8753200e-04,  1.0480869e-01, -2.0251650e-04,  8.1096820e-02,
							         2.1817160e-02,  1.8583720e-02,  7.1396520e-02, -3.5976245e-03,
							         8.8834100e-03],
							       [-7.9996100e-04,  7.0072540e-02, -1.5459165e-03,  2.1872350e-02,
							         5.6301060e-02,  5.6301060e-02,  8.1008700e-03, -2.3492530e-03,
							        -2.5213965e-03],
							       [-1.7983890e-03, -1.7983890e-03, -2.3487700e-03,  4.3837480e-02,
							        -3.5363850e-04,  1.2190570e-02,  3.8333670e-02, -2.5551630e-03,
							         2.5950100e-02],
							       [-1.0990840e-03, -1.3339450e-03, -2.9153450e-03,  6.4134150e-02,
							         1.8101330e-02, -2.7274560e-03,  1.5909290e-02, -4.8568655e-03,
							         4.7224130e-02],
							       [-6.9738700e-04, -1.2496330e-03, -6.9738700e-04, -2.7222880e-03,
							        -1.6177965e-03, -3.4586155e-03, -8.8146900e-04,  1.1859122e-01,
							        -2.1700425e-03],
							       [-1.2961300e-04, -1.2961300e-04, -1.2919985e-03,  7.1209980e-02,
							        -1.2961300e-04,  7.1209980e-02,  3.4308860e-02, -3.8197250e-03,
							         7.1209980e-02],
							       [-1.2976210e-03,  3.7117400e-03,  3.6055790e-02,  3.2433230e-02,
							        -1.1822280e-03,  1.3008061e-01,  7.3410080e-02, -1.0144375e-03,
							         1.4822710e-02],
							       [-5.3885000e-05,  4.0343370e-02,  2.3774940e-02,  4.8627590e-02,
							         2.3774940e-02,  7.2065200e-03,  8.5906550e-02, -1.9178330e-03,
							         3.0644100e-03]])
		
        self.tanh = np.array([[ 0.03805752,  0.01991058,  0.05255759,  0.0489344 ,  0.05617938,
						         0.03442976,  0.04168427,  0.01264747, -0.00551449],
						       [ 0.05063677,  0.05063677, -0.04461201,  0.05063677,  0.05063677,
						        -0.04461201,  0.05063677,  0.05063677, -0.04461201],
						       [-0.01374977,  0.1044266 , -0.00405031,  0.0809195 ,  0.0218137 ,
						         0.01858158,  0.07127545, -0.07182858,  0.00888318],
						       [-0.01599786,  0.06995808, -0.03090848,  0.02186886,  0.05624165,
						         0.05624165,  0.00810069, -0.04695052, -0.05038523],
						       [-0.03595228, -0.03595228, -0.04694088,  0.04380942, -0.00707265,
						         0.01218997,  0.0383149 , -0.05105882,  0.02594428],
						       [-0.02197814, -0.02667257, -0.05824091,  0.06404636,  0.01809935,
						        -0.05449508,  0.01590795, -0.09683294,  0.04718906],
						       [-0.01394684, -0.02498746, -0.01394684, -0.05439203, -0.03234464,
						        -0.0690622 , -0.01762755,  0.11803838, -0.04337362],
						       [-0.00259225, -0.00259225, -0.02583422,  0.07108986, -0.00259225,
						         0.07108986,  0.0342954 , -0.07624623,  0.07108986],
						       [-0.0259466 ,  0.00371172,  0.03604017,  0.03242186, -0.02364015,
						         0.12935185,  0.07327849, -0.02028597,  0.01482162],
						       [-0.0010777 ,  0.0403215 ,  0.02377046,  0.0485893 ,  0.02377046,
						         0.0072064 ,  0.08569584, -0.03833786,  0.0030644 ]])

        self.nloss = 0.9142519719206229



        # Output for forward function
        self.forward_u1 = np.array([[ 0.01402937, -0.04725561,  0.07669296, -0.0880401 , -0.04026252,
							          0.00440673, -0.02149594,  0.1661655 , -0.04567273],
							        [-0.0163818 , -0.03705478,  0.07380859, -0.0352923 , -0.01835815,
							          0.04668763, -0.00553572,  0.0087384 ,  0.00799142],
							        [-0.00353575,  0.05614368, -0.03219106,  0.01297088,  0.01602512,
							         -0.02683109,  0.03167426,  0.00569138, -0.04266634],
							        [-0.00883828, -0.02442314,  0.04095987,  0.00284903, -0.03261088,
							          0.07629807,  0.02610006, -0.03690876,  0.04176993],
							        [-0.02175949,  0.00688673, -0.00725445,  0.0178652 ,  0.00364731,
							          0.09683463,  0.00940061, -0.05622873,  0.02051729],
							        [-0.00410651, -0.04770276,  0.00573411, -0.00064907, -0.01541225,
							          0.00076352,  0.00814272,  0.00849936,  0.02550554],
							        [-0.01845564, -0.00463578, -0.0368322 ,  0.0404096 , -0.03629645,
							          0.07118243,  0.04946754,  0.01288536,  0.020288  ],
							        [-0.02161116,  0.03274394,  0.00986106, -0.01892744, -0.02288224,
							          0.08057598,  0.00911098, -0.01570855, -0.00682689],
							        [-0.01059912,  0.0269362 , -0.00049896,  0.04478966,  0.01578753,
							          0.03827847,  0.0434621 , -0.07005823,  0.01998369],
							        [ 0.02324345, -0.01068456,  0.01567869,  0.02620895,  0.02318995,
							         -0.01824398,  0.02115369, -0.00186478,  0.01252829],
							        [ 0.02044841,  0.04939207, -0.01616666, -0.02104525,  0.02388324,
							         -0.06491152, -0.00783262,  0.06445125, -0.06415026],
							        [-0.01352575,  0.02065031,  0.02825134, -0.04014358, -0.04071984,
							          0.00577602,  0.02131676,  0.05314985, -0.03289264],
							        [-0.01357879,  0.0803966 , -0.02264742,  0.01334491,  0.04070769,
							         -0.0506604 , -0.00504726, -0.02858073, -0.03310328],
							        [-0.02193155, -0.04478489,  0.01797578, -0.06766471, -0.02695712,
							          0.01887477, -0.02739064,  0.05720527, -0.03530926],
							        [-0.02142205,  0.0432955 , -0.01813506,  0.05855105,  0.01610038,
							          0.04087837,  0.05477399, -0.06787374,  0.01324538]])
        self.forward_o1 = np.array([[ 1.40293725e-02, -2.36278030e-03,  7.66929580e-02,
							         -4.40200520e-03, -2.01312595e-03,  4.40673298e-03,
							         -1.07479701e-03,  1.66165497e-01, -2.28363633e-03],
							        [-8.19090233e-04, -1.85273883e-03,  7.38085902e-02,
							         -1.76461500e-03, -9.17907564e-04,  4.66876268e-02,
							         -2.76786002e-04,  8.73839893e-03,  7.99141527e-03],
							        [-1.76787635e-04,  5.61436775e-02, -1.60955310e-03,
							          1.29708797e-02,  1.60251222e-02, -1.34155444e-03,
							          3.16742636e-02,  5.69137911e-03, -2.13331691e-03],
							        [-4.41914192e-04, -1.22115717e-03,  4.09598716e-02,
							          2.84902518e-03, -1.63054378e-03,  7.62980702e-02,
							          2.61000573e-02, -1.84543816e-03,  4.17699346e-02],
							        [-1.08797427e-03,  6.88673452e-03, -3.62722445e-04,
							          1.78652032e-02,  3.64730674e-03,  9.68346285e-02,
							          9.40061467e-03, -2.81143640e-03,  2.05172943e-02],
							        [-2.05325430e-04, -2.38513780e-03,  5.73411089e-03,
							         -3.24536854e-05, -7.70612421e-04,  7.63521354e-04,
							          8.14272249e-03,  8.49936353e-03,  2.55055414e-02],
							        [-9.22782026e-04, -2.31788760e-04, -1.84160995e-03,
							          4.04095986e-02, -1.81482227e-03,  7.11824273e-02,
							          4.94675354e-02,  1.28853577e-02,  2.02880015e-02],
							        [-1.08055793e-03,  3.27439366e-02,  9.86105721e-03,
							         -9.46372003e-04, -1.14411221e-03,  8.05759846e-02,
							          9.11097531e-03, -7.85427583e-04, -3.41344301e-04],
							        [-5.29956104e-04,  2.69361964e-02, -2.49481383e-05,
							          4.47896588e-02,  1.57875328e-02,  3.82784725e-02,
							          4.34620987e-02, -3.50291137e-03,  1.99836905e-02],
							        [ 2.32434490e-02, -5.34228017e-04,  1.56786924e-02,
							          2.62089520e-02,  2.31899465e-02, -9.12198841e-04,
							          2.11536923e-02, -9.32392309e-05,  1.25282922e-02],
							        [ 2.04484142e-02,  4.93920702e-02, -8.08333216e-04,
							         -1.05226232e-03,  2.38832403e-02, -3.24557621e-03,
							         -3.91631032e-04,  6.44512481e-02, -3.20751283e-03],
							        [-6.76287336e-04,  2.06503137e-02,  2.82513442e-02,
							         -2.00717925e-03, -2.03599189e-03,  5.77602179e-03,
							          2.13167613e-02,  5.31498450e-02, -1.64463193e-03],
							        [-6.78939626e-04,  8.03965958e-02, -1.13237106e-03,
							          1.33449088e-02,  4.07076888e-02, -2.53301989e-03,
							         -2.52362979e-04, -1.42903652e-03, -1.65516393e-03],
							        [-1.09657768e-03, -2.23924454e-03,  1.79757840e-02,
							         -3.38323532e-03, -1.34785601e-03,  1.88747740e-02,
							         -1.36953207e-03,  5.72052749e-02, -1.76546298e-03],
							        [-1.07110231e-03,  4.32954987e-02, -9.06752872e-04,
							          5.85510475e-02,  1.61003831e-02,  4.08783700e-02,
							          5.47739852e-02, -3.39368691e-03,  1.32453818e-02]])
        self.forward_u2 = np.array([[-0.01034704,  0.01480894, -0.04354555,  0.00906054,  0.00011559,
          							0.02205182,  0.01805583, -0.04646774,  0.0181819 ]])
        self.forward_o2 = np.array([[-0.01034667,  0.01480785, -0.04351804,  0.00906029,  0.00011559,
         							0.02204824,  0.01805387, -0.04643432,  0.0181799 ]])



        # Outputs for backward function
        self.dLoss_theta2 = np.array([[-0.17192299, -0.06966891, -0.05309455, -0.12478398, -0.10076108,
							         -0.04079369, -0.13348938, -0.06889125, -0.11043298, -0.06050248,
							         -0.07755629, -0.07813415, -0.04099982, -0.06394294, -0.12383152]])
        self.dLoss_b2 = np.array([[-4.99843319]])
        self.dLoss_theta1 = np.array([[ 1.12399844e-02,  5.02579470e-03,  6.45865042e-03,
								         -3.49777091e-04,  4.64750697e-04, -4.24058492e-03,
								         -4.08346904e-03,  7.79280573e-03,  1.21147962e-02,
								          7.35180145e-03],
								        [ 8.82491395e-02,  3.94593127e-02,  5.07091757e-02,
								         -2.74622511e-03,  3.64892403e-03, -3.32943497e-02,
								         -3.20607767e-02,  6.11841064e-02,  9.51176001e-02,
								          5.77216240e-02],
								        [-3.76515341e-02, -1.68353331e-02, -2.16350921e-02,
								          1.17167815e-03, -1.55681504e-03,  1.42050489e-02,
								          1.36787445e-02, -2.61042259e-02, -4.05819659e-02,
								         -2.46269563e-02],
								        [-7.92656803e-02, -3.54424903e-02, -4.55471558e-02,
								          2.46666883e-03, -3.27747611e-03,  2.99050993e-02,
								          2.87970998e-02, -5.49557747e-02, -8.54349553e-02,
								         -5.18457611e-02],
								        [-1.59969723e-02, -7.15281233e-03, -9.19208147e-03,
								          4.97809806e-04, -6.61442561e-04,  6.03528594e-03,
								          5.81167545e-03, -1.10908782e-02, -1.72420221e-02,
								         -1.04632320e-02],
								        [ 3.63006245e-03,  1.62312936e-03,  2.08588408e-03,
								         -1.12963919e-04,  1.50095765e-04, -1.36953821e-03,
								         -1.31879611e-03,  2.51676253e-03,  3.91259145e-03,
								          2.37433590e-03],
								        [ 4.94535259e-03,  2.21124212e-03,  2.84166797e-03,
								         -1.53894435e-04,  2.04480361e-04, -1.86576662e-03,
								         -1.79663899e-03,  3.42866776e-03,  5.33025106e-03,
								          3.23463531e-03],
								        [ 4.31504299e-03,  1.92940839e-03,  2.47948336e-03,
								         -1.34279829e-04,  1.78418330e-04, -1.62796545e-03,
								         -1.56764848e-03,  2.99166713e-03,  4.65088425e-03,
								          2.82236507e-03],
								        [-6.30992883e-04, -2.82139244e-04, -3.62577235e-04,
								          1.96358685e-05, -2.60902838e-05,  2.38058953e-04,
								          2.29238744e-04, -4.37474359e-04, -6.80103275e-04,
								         -4.12717157e-04],
								        [ 4.06668521e-02,  1.81835885e-02,  2.33677355e-02,
								         -1.26551183e-03,  1.68149236e-03, -1.53426583e-02,
								         -1.47742048e-02,  2.81947793e-02,  4.38319671e-02,
								          2.65992027e-02],
								        [ 1.87417583e-02,  8.38010327e-03,  1.07692735e-02,
								         -5.83224806e-04,  7.74933929e-04, -7.07082992e-03,
								         -6.80885198e-03,  1.29938688e-02,  2.02004358e-02,
								          1.22585300e-02],
								        [ 3.61366005e-02,  1.61579527e-02,  2.07645903e-02,
								         -1.12453493e-03,  1.49417559e-03, -1.36334997e-02,
								         -1.31283714e-02,  2.50539056e-02,  3.89491244e-02,
								          2.36360749e-02],
								        [-9.01756668e-03, -4.03207312e-03, -5.18161849e-03,
								          2.80617671e-04, -3.72858206e-04,  3.40211837e-03,
								          3.27606811e-03, -6.25197892e-03, -9.71940697e-03,
								         -5.89817189e-03],
								        [ 1.07515691e-02,  4.80740695e-03,  6.17800025e-03,
								         -3.34578095e-04,  4.44555710e-04, -4.05631718e-03,
								         -3.90602852e-03,  7.45418200e-03,  1.15883674e-02,
								          7.03234085e-03],
								        [-1.79486181e-02, -8.02546222e-03, -1.03135241e-02,
								          5.58543074e-04, -7.42139180e-04,  6.77159655e-03,
								          6.52070536e-03, -1.24439759e-02, -1.93455652e-02,
								         -1.17397563e-02]])
        self.dLoss_b1 = np.array([[ 0.40023358],
						        [ 3.14237702],
						        [-1.34069654],
						        [-2.82249384],
						        [-0.56962049],
						        [ 0.12925933],
						        [ 0.17609421],
						        [ 0.15365013],
						        [-0.02246841],
						        [ 1.44806604],
						        [ 0.66735688],
						        [ 1.28675275],
						        [-0.32109768],
						        [ 0.38284207],
						        [-0.63911473]])



        # Outputs for BGD
        self.batch_y =np.array([[[1., 2., 3., 4., 5., 6.]],
						       [[7., 8., 9., 1., 2., 3.]],
						       [[4., 5., 6., 7., 8., 9.]]])

        self.bgd_loss = [7.573928445695168, 17.098338048204653, 21.757257734326465]